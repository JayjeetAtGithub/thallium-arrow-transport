name: Benchmark
on: workflow_dispatch
jobs:
  cleanup:
    name: cleanup
    runs-on: ubuntu-latest
    steps:
    - name: cleanup old results
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: apt014.apt.emulab.net
        username: ${{ secrets.CLOUDLAB_USERNAME }}
        key: ${{ secrets.CLOUDLAB_PRIVATE_KEY }}
        port: ${{ secrets.CLOUDLAB_PORT }}
        passphrase: ${{ secrets.CLOUDLAB_PASSPHRASE }}
        script: |
          echo " " > /proj/schedock-PG0/thallium_result
          echo " " > /proj/schedock-PG0/flight_result
  benchmark:
    strategy:
      matrix:
        protocol: [thallium, flight]
        selectivity: [100, 10, 1]
      max-parallel: 1
    name: benchmark
    runs-on: ubuntu-latest
    steps:
    - name: start server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: apt014.apt.emulab.net
        username: ${{ secrets.CLOUDLAB_USERNAME }}
        key: ${{ secrets.CLOUDLAB_PRIVATE_KEY }}
        port: ${{ secrets.CLOUDLAB_PORT }}
        passphrase: ${{ secrets.CLOUDLAB_PASSPHRASE }}
        script: |
          cd ~/thallium-arrow-transport
          sudo ./scripts/${{ matrix.protocol }}_server.sh ${{ matrix.selectivity }} >out.log 2>err.log &
          echo $! > /tmp/pid
          cat /tmp/pid
    - name: run client
      uses: appleboy/ssh-action@v0.1.10
      if: ${{ success() }}
      with:
        host: apt016.apt.emulab.net
        username: ${{ secrets.CLOUDLAB_USERNAME }}
        key: ${{ secrets.CLOUDLAB_PRIVATE_KEY }}
        port: ${{ secrets.CLOUDLAB_PORT }}
        passphrase: ${{ secrets.CLOUDLAB_PASSPHRASE }}
        script: |
          cd ~/thallium-arrow-transport
          sudo ./scripts/${{ matrix.protocol }}_client.sh
    - name: kill server
      uses: appleboy/ssh-action@v0.1.10
      if: ${{ always() }}
      with:
        host: apt014.apt.emulab.net
        username: ${{ secrets.CLOUDLAB_USERNAME }}
        key: ${{ secrets.CLOUDLAB_PRIVATE_KEY }}
        port: ${{ secrets.CLOUDLAB_PORT }}
        passphrase: ${{ secrets.CLOUDLAB_PASSPHRASE }}
        script: |
          pid=$(cat /tmp/pid)
          sudo rkill $pid 
